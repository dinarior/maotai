sample.id = boot.mblock(1000, b=50)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,2), pty="s")
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
par(opar)
## example : bootstrap confidence interval of mean and variances
vec.x = seq(from=0,to=10,length.out=1000)
vec.y = sin(2*vec.x) + 2*cos(1.1*vec.x) + rnorm(1000,sd=0.5)
data.mu  = mean(vec.y)
data.var = var(vec.y)
## apply moving block bootstrapping for 496 times
nreps   = 496
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.mblock(1000, b=50)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,2), pty="s")
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
par(opar)
nreps   = 100
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.mblock(1000, b=50)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,2), pty="s")
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
par(opar)
nreps   = 100
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.mblock(1000, b=50)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,2), pty="s")
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
par(opar)
nreps   = 100
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.mblock(1000, b=50)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,2), pty="s")
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
par(opar)
## example : bootstrap confidence interval of mean and variances
vec.x = seq(from=0,to=10,length.out=1000)
vec.y = sin(2*vec.x) + 2*cos(1.1*vec.x) + rnorm(1000,sd=0.5)
data.mu  = mean(vec.y)
data.var = var(vec.y)
## apply stationary bootstrapping
nreps   = 496
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.stationary(1000)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,2), pty="s")
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
par(opar)
vec.x = seq(from=0,to=10,length.out=100)
vec.y = sin(2*vec.x) + 2*cos(1.1*vec.x) + rnorm(1000,sd=0.5)
data.mu  = mean(vec.y)
data.var = var(vec.y)
## apply stationary bootstrapping
nreps   = 496
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.stationary(1000)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,2), pty="s")
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
par(opar)
## example : bootstrap confidence interval of mean and variances
vec.x = seq(from=0,to=10,length.out=1000)
vec.y = sin(2*vec.x) + 2*cos(1.1*vec.x) + rnorm(1000,sd=0.5)
data.mu  = mean(vec.y)
data.var = var(vec.y)
## apply stationary bootstrapping
nreps   = 496
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.stationary(1000)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,3), pty="s")
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
par(opar)
opar <- par(mfrow=c(1,3), pty="s")
plot(vec.x, vec.y, type="l", main="1d signal")  # 1d signal
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
par(opar)
## example : bootstrap confidence interval of mean and variances
vec.x = seq(from=0,to=10,length.out=1000)
vec.y = sin(2*vec.x) + 2*cos(1.1*vec.x) + rnorm(1000,sd=0.5)
data.mu  = mean(vec.y)
data.var = var(vec.y)
## apply moving block bootstrapping
nreps   = 496
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.mblock(1000, b=50)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,3), pty="s")
plot(vec.x, vec.y, type="l", main="1d signal")  # 1d signal
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
## example : bootstrap confidence interval of mean and variances
vec.x = seq(from=0,to=10,length.out=1000)
vec.y = sin(2*vec.x) + 2*cos(1.1*vec.x) + rnorm(1000,sd=0.5)
data.mu  = mean(vec.y)
data.var = var(vec.y)
## apply moving block bootstrapping
nreps   = 496
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.mblock(1000, b=50)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,3), pty="s")
plot(vec.x, vec.y, type="l", main="1d signal")  # 1d signal
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
## example : bootstrap confidence interval of mean and variances
vec.x = seq(from=0,to=10,length.out=1000)
vec.y = sin(2*vec.x) + 2*cos(1.1*vec.x) + rnorm(1000,sd=0.5)
data.mu  = mean(vec.y)
data.var = var(vec.y)
## apply moving block bootstrapping
nreps   = 496
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.mblock(1000, b=50)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,3), pty="s")
plot(vec.x, vec.y, type="l", main="1d signal")  # 1d signal
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
vec.x = seq(from=0,to=10,length.out=1000)
vec.y = sin(2*vec.x) + 2*cos(4*vec.x) + rnorm(1000,sd=0.5)
data.mu  = mean(vec.y)
data.var = var(vec.y)
## apply moving block bootstrapping
nreps   = 496
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.mblock(1000, b=50)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,3), pty="s")
plot(vec.x, vec.y, type="l", main="1d signal")  # 1d signal
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
par(opar)
vec.x = seq(from=0,to=10,length.out=1000)
vec.y = sin(2*vec.x) + 2*cos(3.14*vec.x) + rnorm(1000,sd=1.5)
data.mu  = mean(vec.y)
data.var = var(vec.y)
## apply moving block bootstrapping
nreps   = 496
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.mblock(1000, b=50)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,3), pty="s")
plot(vec.x, vec.y, type="l", main="1d signal")  # 1d signal
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
par(opar)
vec.x = seq(from=0,to=10,length.out=1000)
vec.y = sin(1.21*vec.x) + 2*cos(3.14*vec.x) + rnorm(1000,sd=1.5)
data.mu  = mean(vec.y)
data.var = var(vec.y)
## apply moving block bootstrapping
nreps   = 496
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.mblock(1000, b=50)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,3), pty="s")
plot(vec.x, vec.y, type="l", main="1d signal")  # 1d signal
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
par(opar)
vec.x = seq(from=0,to=10,length.out=1000)
vec.y = sin(1.21*vec.x) + 2*cos(3.14*vec.x) + rnorm(1000,sd=1.5)
data.mu  = mean(vec.y)
data.var = var(vec.y)
## apply moving block bootstrapping
nreps   = 496
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.mblock(1000, b=50)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,3), pty="s")
plot(vec.x, vec.y, type="l", main="1d signal")  # 1d signal
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
par(opar)
vec.x = seq(from=0,to=10,length.out=1000)
vec.y = sin(1.21*vec.x) + 2*cos(3.14*vec.x) + rnorm(1000,sd=1.5)
data.mu  = mean(vec.y)
data.var = var(vec.y)
## apply moving block bootstrapping
nreps   = 496
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.mblock(1000, b=50)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,3), pty="s")
plot(vec.x, vec.y, type="l", main="1d signal")  # 1d signal
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
par(opar)
## example : bootstrap confidence interval of mean and variances
vec.x = seq(from=0,to=10,length.out=1000)
vec.y = sin(1.21*vec.x) + 2*cos(3.14*vec.x) + rnorm(1000,sd=1.5)
data.mu  = mean(vec.y)
data.var = var(vec.y)
## apply stationary bootstrapping
nreps   = 496
vec.mu  = rep(0,nreps)
vec.var = rep(0,nreps)
for (i in 1:nreps){
sample.id = boot.stationary(1000)
sample.y  = vec.y[sample.id]
vec.mu[i]  = mean(sample.y)
vec.var[i] = var(sample.y)
print(paste("iteration ",i,"/",nreps," complete.", sep=""))
}
## visualize
opar <- par(mfrow=c(1,3), pty="s")
plot(vec.x, vec.y, type="l", main="1d signal")  # 1d signal
hist(vec.mu, main="mean CI", xlab="mu")         # mean
abline(v=data.mu, col="red", lwd=4)
hist(vec.var, main="variance CI", xlab="sigma") # variance
abline(v=data.var, col="blue", lwd=4)
par(opar)
help(var)
help(mean)
library(maotai)
library(maotai)
library(maotai)
## two sets of 1d samples, 10 each and add some noise
#    set 1 : mixture of two gaussians
#    set 2 : gamma
# generate data
elist = list()
for (i in 1:10){
elist[[i]] = stats::ecdf(c(rnorm(100, mean=-2), rnorm(50, mean=2)))
}
for (j in 11:20){
elist[[j]] = stats::ecdf(rgamma(100,1) + rnorm(100, sd=sqrt(0.5)))
}
# run EP-means with k clusters
# change the value below to see different settings
myk   = 2
epout = epmeans(elist, k=myk)
# visualize
opar = par(mfrow=c(1,myk))
for (k in 1:myk){
idk = which(epout$cluster==k)
for (i in 1:length(idk)){
if (i<2){
plot(elist[[idk[i]]], verticals=TRUE, lwd=0.25, do.points=FALSE, main=paste("class",k))
} else {
plot(elist[[idk[i]]], add=TRUE, verticals=TRUE, lwd=0.25, do.points=FALSE)
}
plot(epout$centers[[k]], add=TRUE, verticals=TRUE, lwd=2, col="red", do.points=FALSE)
}
}
par(opar)
library(maotai)
myk   = 3
epout = epmeans(elist, k=myk)
# visualize
opar = par(mfrow=c(1,myk))
for (k in 1:myk){
idk = which(epout$cluster==k)
for (i in 1:length(idk)){
if (i<2){
plot(elist[[idk[i]]], verticals=TRUE, lwd=0.25, do.points=FALSE, main=paste("class",k))
} else {
plot(elist[[idk[i]]], add=TRUE, verticals=TRUE, lwd=0.25, do.points=FALSE)
}
plot(epout$centers[[k]], add=TRUE, verticals=TRUE, lwd=2, col="red", do.points=FALSE)
}
}
par(opar)
myk   = 3
epout = epmeans(elist, k=myk)
# visualize
opar = par(mfrow=c(1,myk))
for (k in 1:myk){
idk = which(epout$cluster==k)
for (i in 1:length(idk)){
if (i<2){
pm = paste("class",k," : size=",length(idk),sep="")
plot(elist[[idk[i]]], verticals=TRUE, lwd=0.25, do.points=FALSE, main=pm)
} else {
plot(elist[[idk[i]]], add=TRUE, verticals=TRUE, lwd=0.25, do.points=FALSE)
}
plot(epout$centers[[k]], add=TRUE, verticals=TRUE, lwd=2, col="red", do.points=FALSE)
}
}
par(opar)
myk   = 4
epout = epmeans(elist, k=myk)
# visualize
opar = par(mfrow=c(1,myk))
for (k in 1:myk){
idk = which(epout$cluster==k)
for (i in 1:length(idk)){
if (i<2){
pm = paste("class",k," : size=",length(idk),sep="")
plot(elist[[idk[i]]], verticals=TRUE, lwd=0.25, do.points=FALSE, main=pm)
} else {
plot(elist[[idk[i]]], add=TRUE, verticals=TRUE, lwd=0.25, do.points=FALSE)
}
plot(epout$centers[[k]], add=TRUE, verticals=TRUE, lwd=2, col="red", do.points=FALSE)
}
}
par(opar)
myk   = 2
epout = epmeans(elist, k=myk)
# visualize
opar = par(mfrow=c(1,myk))
for (k in 1:myk){
idk = which(epout$cluster==k)
for (i in 1:length(idk)){
if (i<2){
pm = paste("class",k," : size=",length(idk),sep="")
plot(elist[[idk[i]]], verticals=TRUE, lwd=0.25, do.points=FALSE, main=pm)
} else {
plot(elist[[idk[i]]], add=TRUE, verticals=TRUE, lwd=0.25, do.points=FALSE)
}
plot(epout$centers[[k]], add=TRUE, verticals=TRUE, lwd=2, col="red", do.points=FALSE)
}
}
par(opar)
# run EP-means with k clusters
# change the value below to see different settings
myk   = 2
epout = epmeans(elist, k=myk)
# visualize
opar = par(mfrow=c(1,myk))
for (k in 1:myk){
idk = which(epout$cluster==k)
for (i in 1:length(idk)){
if (i<2){
pm = paste("class",k," (size=",length(idk),")",sep="")
plot(elist[[idk[i]]], verticals=TRUE, lwd=0.25, do.points=FALSE, main=pm)
} else {
plot(elist[[idk[i]]], add=TRUE, verticals=TRUE, lwd=0.25, do.points=FALSE)
}
plot(epout$centers[[k]], add=TRUE, verticals=TRUE, lwd=2, col="red", do.points=FALSE)
}
}
par(opar)
# run EP-means with k clusters
# change the value below to see different settings
myk   = 2
epout = epmeans(elist, k=myk)
# visualize
opar = par(mfrow=c(1,myk))
for (k in 1:myk){
idk = which(epout$cluster==k)
for (i in 1:length(idk)){
if (i<2){
pm = paste("class ",k," (size=",length(idk),")",sep="")
plot(elist[[idk[i]]], verticals=TRUE, lwd=0.25, do.points=FALSE, main=pm)
} else {
plot(elist[[idk[i]]], add=TRUE, verticals=TRUE, lwd=0.25, do.points=FALSE)
}
plot(epout$centers[[k]], add=TRUE, verticals=TRUE, lwd=2, col="red", do.points=FALSE)
}
}
par(opar)
library(maotai)
library(maotai)
